package ru.kunik.uct.util;

import java.util.HashMap;
import java.util.Map;

public final class Rus {

    private final static Map<String, String> names = new HashMap<String, String>();

    public static String get(String name) {
        if (names.containsKey(name)) {
            return names.get(name);
        }
        return name;
    }

    public static String getInformation(String workName) {
        return "<html>"
                + "<div align = 'center'>МОСКОВСКИЙ АВИАЦИОННЫЙ ИНСТИТУТ<br>"
                + "(Национальный Исследовательский Университет)<br><br>"
                + "Факультет № 3<br>"
                + "\"Системы управления,<br>"
                + "информатика и электроэнергетика\"<br><br>"
                + "Кафедра № 308 \"Информационные технологии\"<br><br><br>"
                + "Курсовая работа по дискретной математике<br>"
                + Rus.get(workName + "WN") + "<br><br>КР-" + Rus.get(workName + "DM") + "-ДМ-2014<br><br></div>"
                + "<div align = 'right'>Группа: 3О - 113Б<br>"
                + "Кузнецов Н.В.<br>"
                + "-------------<br>"
                + "Преподаватель:<br>"
                + "доцент, к.т.н. Гридин А.Н.<br>"
                + "-------------<br><br>"
                + "</div>"
                + "<div align = 'center'>Москва 2014<br>"
                + "</div><br>"
                + "</html>";
    }
    
    public static String getAbout(String type) {
        if (type.equalsIgnoreCase("Aroma")) {
            return "                  Конвертер римско - арабских чисел Aroma\n"
                    + "\n"
                    + "Назначение и выполняемые функции:\n"
                    + "\n"
                    + "1. Конвертация римских чисел в арабские.\n"
                    + "2. Конвертация арабских чисел в римские.\n"
                    + "3. Запись производимых действий в файл.";
        }
        if (type.equalsIgnoreCase("Factorization")) {
            return "                 Программа факторизации числа Factorization\n"
                    + "\n"
                    + "Назначение и выполняемые функции:\n"
                    + "\n"
                    + "1. Факторизация числа.\n"
                    + "2. Подсчет количества делителей числа.\n"
                    + "3. Подсчет суммы делителей числа.\n"
                    + "4. Определение множества делителей числа.\n"
                    + "5. Запись производимых действий в файл.";
        }
        if (type.equalsIgnoreCase("Numerator")) {
            return "                          Калькулятор НОД и НОК Numerator\n"
                    + "\n"
                    + "Назначение и выполняемые функции:\n"
                    + "\n"
                    + "1. Вычисление наибольшего общего делителя.\n"
                    + "2. Вычисление наименьшего общего кратного.\n"
                    + "3. Запись производимых действий в файл.";
        }
        if (type.equalsIgnoreCase("Horner")) {
            return "   Программа вычисления корней уравнения по схеме Горнера\n"
                    + "                                                      Horner\n"
                    + "\n"
                    + "Назначение и выполняемые функции:\n"
                    + "\n"
                    + "1. Вычисление корней уравнения.\n"
                    + "5. Запись производимых действий в файл.";
        }
        return null;
    }
    
    public static String getReference(String type) {
        if (type.equalsIgnoreCase("Aroma")) {
            return "                  Конвертер римско - арабских чисел Aroma\n"
                    + "\n"
                    + "Порядок выполнения действий:\n"
                    + "\n"
                    + "1. Для перевода арабского числа в римское необходимо\n"
                    + "набрать на клавиатуре выбранное для перевода число в\n"
                    + "левом текстовом поле (Арабские), а затем нажать\n"
                    + "левую кнопку (Арабские в римские). После чего в нижнем\n"
                    + "текстовом поле появится надпись \"Вычислено\", а в правом\n"
                    + "текстовом поле отобразится конвертированное число.\n"
                    + "В противном случае произойдет ошибка, которая\n"
                    + "отобразится в информационном поле.\n"
                    + "\n"
                    + "2. Для перевода римского числа в арабское необходимо\n"
                    + "набрать на клавиатуре выбранное для перевода число в\n"
                    + "правом текстовом поле (Римские), а затем нажать\n"
                    + "правую кнопку (Римские в арабские). После чего в нижнем\n"
                    + "текстовом поле появится надпись \"Вычислено\", а в левом\n"
                    + "текстовом поле отобразится конвертированное число.\n"
                    + "В противном случае произойдет ошибка, которая\n"
                    + "отобразитсяв информационном поле.\n"
                    + "\n"
                    + "3. Все действия, начиная с запуска программы, записываются\n"
                    + "в специальный лог-файл, который находится в той же\n"
                    + "папке, что и сама программа. Таким образом можно\n"
                    + "посмотреть все совершенные действия и их время. \n"
                    + "Для отмены записи действий в файл, необходимо открыть\n"
                    + "меню \"Опции\" в верхней части графической оболочки\n"
                    + "программы, нажать на кнопку \"Разрешить логирование\" и \n"
                    + "убедиться, что галочка исчезла, путем повторного нажатия\n"
                    + "на кнопку \"Опции\".\n"
                    + "\n"
                    + "4. Для того, чтобы очистить лог-файл, необходимо открыть\n"
                    + "меню \"Опции\", нажать на кнопку \"Очистить лог\" и подтвердить\n"
                    + "действие нажав в открывшемся окне кнопку \"Yes\" или\n"
                    + "отменить действие, нажав на кнопку \"No\".";
        }
        if (type.equalsIgnoreCase("Factorization")) {
            return "                 Программа факторизации числа Factorization\n"
                    + "\n"
                    + "Порядок выполнения действий:\n"
                    + "\n"
                    + "1. Для того, чтобы произвести факторизацию числа\n"
                    + "и соответствующие дополнительные расчеты,\n"
                    + "необходимо ввести число в текстовое поле сверху\n"
                    + "и нажать на кнопку \"Вычислить\". Если значения\n"
                    + "в текстовом поле \"Сомножители\" или \"Множество делителей\"\n"
                    + "выходят за пределы этих полей, необходимо\n"
                    + "воспользоваться ползунками, которые находятся\n"
                    + "снизу этих текстовых полей.\n"
                    + "\n"
                    + "2. Все действия, начиная с запуска программы, записываются\n"
                    + "в специальный лог-файл, который находится в той же\n"
                    + "папке, что и сама программа. Таким образом можно\n"
                    + "посмотреть все совершенные действия и их время. \n"
                    + "Для отмены записи действий в файл, необходимо открыть\n"
                    + "меню \"Опции\" в верхней части графической оболочки\n"
                    + "программы, нажать на кнопку \"Разрешить логирование\" и \n"
                    + "убедиться, что галочка исчезла, путем повторного нажатия\n"
                    + "на кнопку \"Опции\".\n"
                    + "\n"
                    + "3. Для того, чтобы очистить лог-файл, необходимо открыть\n"
                    + "меню \"Опции\", нажать на кнопку \"Очистить лог\" и подтвердить\n"
                    + "действие нажав в открывшемся окне кнопку \"Yes\" или\n"
                    + "отменить действие, нажав на кнопку \"No\".";
        }
        if (type.equalsIgnoreCase("Numerator")) {
            return "                          Калькулятор НОД и НОК Numerator\n"
                    + "\n"
                    + "Порядок выполнения действий:\n"
                    + "\n"
                    + "1. Для того, чтобы произвести вычисления НОД и НОК чисел,\n"
                    + "необходимо ввести числа по порядку в текстовое поле,\n"
                    + "нажимая кнопку \"Добавить\". Добавленные числа будут\n"
                    + "отображаться в списке слева. Их можно удалить либо\n"
                    + "двойным нажатием на нужное число, либо нажатием на\n"
                    + "кнопку \"Очистить список\". По нажатии на кнопку \"Вычислить\"\n"
                    + "результаты будут отображены в соответствующих полях. В\n"
                    + "противном случае произойдет ошибка, которая отобразится\n"
                    + "в информационном поле.\n"
                    + "\n"
                    + "2. Все действия, начиная с запуска программы, записываются\n"
                    + "в специальный лог-файл, который находится в той же\n"
                    + "папке, что и сама программа. Таким образом можно\n"
                    + "посмотреть все совершенные действия и их время. \n"
                    + "Для отмены записи действий в файл, необходимо открыть\n"
                    + "меню \"Опции\" в верхней части графической оболочки\n"
                    + "программы, нажать на кнопку \"Разрешить логирование\" и \n"
                    + "убедиться, что галочка исчезла, путем повторного нажатия\n"
                    + "на кнопку \"Опции\".\n"
                    + "\n"
                    + "3. Для того, чтобы очистить лог-файл, необходимо открыть\n"
                    + "меню \"Опции\", нажать на кнопку \"Очистить лог\" и подтвердить\n"
                    + "действие нажав в открывшемся окне кнопку \"Yes\" или\n"
                    + "отменить действие, нажав на кнопку \"No\".";
        }
        if (type.equalsIgnoreCase("Horner")) {
            return "Программа вычисления корней уравнения по схеме Горнера\n"
                    + "                                                   Horner\n"
                    + "\n"
                    + "Порядок выполнения действий:\n"
                    + "\n"
                    + "1. Для того, чтобы произвести вычисление корней уравнения\n"
                    + "необходимо ввести коэффициенты данного уравнения в\n"
                    + "текстовую строку \"Коэффициенты\" через запятую по порядку,\n"
                    + "начиная с коэффициента при переменной высшей степени.\n"
                    + "После этого, при нажатии на кнопку \"Вычислить\" корни\n"
                    + "уравнения появятся в текстовой строке \"Корни уравнения\",\n"
                    + "в противном случае произойдет ошибка, которая отобразится\n"
                    + "в нижнем информационном поле. Если корни уравнения\n"
                    + "выходят за пределы текстового поля, необходимо\n"
                    + "воспользоваться ползунком, который находится снизу\n"
                    + "этого текстового поля.\n"
                    + "\n"
                    + "2. Все действия, начиная с запуска программы, записываются\n"
                    + "в специальный лог-файл, который находится в той же\n"
                    + "папке, что и сама программа. Таким образом можно\n"
                    + "посмотреть все совершенные действия и их время. \n"
                    + "Для отмены записи действий в файл, необходимо открыть\n"
                    + "меню \"Опции\" в верхней части графической оболочки\n"
                    + "программы, нажать на кнопку \"Разрешить логирование\" и \n"
                    + "убедиться, что галочка исчезла, путем повторного нажатия\n"
                    + "на кнопку \"Опции\".\n"
                    + "\n"
                    + "3. Для того, чтобы очистить лог-файл, необходимо открыть\n"
                    + "меню \"Опции\", нажать на кнопку \"Очистить лог\" и подтвердить\n"
                    + "действие нажав в открывшемся окне кнопку \"Yes\" или\n"
                    + "отменить действие, нажав на кнопку \"No\".";
        }
        return null;
    }
    
    public static String getRestrictions(String type) {
        if (type.equalsIgnoreCase("Aroma")) {
            return "                  Конвертер римско - арабских чисел Aroma\n"
                    + "\n"
                    + "Ограничения в программе:\n"
                    + "\n"
                    + "1. В поле арабских чисел можно вводить только цифры\n"
                    + "от 0 до 9.\n"
                    + "2. В поле римских чисел можно вводить только символы,\n"
                    + "которые совпадают со следующим списком:\n"
                    + "'I', 'V', 'X', 'L', 'C', 'D', 'M'. Регистр букв значения не имеет.\n"
                    + "3. Пределы вводимых значений: от 0 до 4999.\n"
                    + "4. Числа от четырех тысяч в римском варианте\n"
                    + "начинаются с MMMM.";
        }
        if (type.equalsIgnoreCase("Factorization")) {
            return "                 Программа факторизации числа Factorization\n"
                    + "\n"
                    + "Ограничения в программе:\n"
                    + "\n"
                    + "1. Запрещено вводить отрицательные числа и ноль.\n"
                    + "2. Запрещено вводить числа, содержащие более 9 знаков.";
        }
        if (type.equalsIgnoreCase("Numerator")) {
            return "                          Калькулятор НОД и НОК Numerator\n"
                    + "\n"
                    + "Ограничения в программе:\n"
                    + "\n"
                    + "1. Запрещено вводить более пяти чисел.\n"
                    + "2. Запрещено вводить числа, содержащие более 9 знаков.";
        }
        if (type.equalsIgnoreCase("Horner")) {
            return "  Программа вычисления корней уравнения по схеме Горнера\n"
                    + "                                                     Horner\n"
                    + "\n"
                    + "Ограничения в программе:\n"
                    + "\n"
                    + "Прямые ограничения отсутствуют, однако следует соблюдать\n"
                    + "осторожность при введении чисел, содержащих более 10\n"
                    + "знаков, а также введении дробных чисел и более\n"
                    + "12 коэффициентов.";
        }
        return null;
    }

    static {
        names.put("Aroma", "Арома");
        names.put("AromaWN", "Конвертер римско-арабских чисел");
        names.put("AromaDM", "01");
        names.put("FactorizationWN", "Факторизатор");
        names.put("FactorizationDM", "02");
        names.put("NumeratorWN", "НОД и НОК");
        names.put("NumeratorDM", "03");
        names.put("Factorization", "Факторизатор");
        names.put("Numerator", "НОК и НОД");
        names.put("HornerWN", "Схема Горнера");
        names.put("HornerDM", "04");
        names.put("Horner", "Схема Горнера");
        names.put("Fractions", "Дроби");
        names.put("ContinuedFractionWN", "Цепные дроби");
        names.put("ContinuedFractionDM", "05");
        names.put("DiophantWN", "Диофантовы уравнения");
        names.put("DiophantDM", "06");
        names.put("DiophantineEq", "Диофантовы уравнения");
        names.put("CombocalculatorWN", "Комбокалькулятор");
        names.put("CombocalculatorDM", "07");
        names.put("CombiCalc", "Комбокалькулятор");
        names.put("MagicSquareWN", "Магический квадрат");
        names.put("MagicSquareDM", "08");
        names.put("MagicSquare", "Магический квадрат");
        names.put("Exit", "Выход");
        names.put("Info", "Информация");
        names.put("File", "Файл");
        names.put("Options", "Опции");
        names.put("Continue", "Продолжить");
        names.put("About", "Описание");
        names.put("Apply log", "Разрешить логирование");
        names.put("Clear log", "Очистить лог");
        names.put("Reference", "Справка");
        names.put("Restrictions", "Ограничения");
        names.put("Arabic to rome", "Арабские в римские");
        names.put("Rome to arabic", "Римские в арабские");
        names.put("Arabic", "Арабские");
        names.put("Rome", "Римские");
        names.put("Waiting", "Ожидание");
        names.put("Close", "Закрыть");
        names.put("Help", "Помощь");
        names.put("Info", "Информация");
        names.put("No data", "Данные не введены");
        names.put("Calculated", "Вычислено");
        names.put("Wrong arabic number", "Неверные входные данные");
        names.put("Wrong rome number", "Неверные входные данные");
    }
}
